import{_ as i,o as e,c as l,U as a}from"./chunks/framework.e5d16f40.js";const t="/vitepress-demo/68686d34645193df14e3294c0d0c22e2.png",o="/vitepress-demo/ebd362544658475809fe8b85905d135c.png",x=JSON.parse('{"title":"链上操作调用基本步骤","description":"","frontmatter":{"prev":false,"next":false},"headers":[],"relativePath":"markdown/chapter-5/index.md","filePath":"markdown/chapter-5/index.md"}'),r={name:"markdown/chapter-5/index.md"},s=a('<h1 id="链上操作调用基本步骤" tabindex="-1">链上操作调用基本步骤 <a class="header-anchor" href="#链上操作调用基本步骤" aria-label="Permalink to &quot;链上操作调用基本步骤&quot;">​</a></h1><h2 id="上链交易提交" tabindex="-1">上链交易提交 <a class="header-anchor" href="#上链交易提交" aria-label="Permalink to &quot;上链交易提交&quot;">​</a></h2><ul><li><strong>调用步骤描述</strong></li></ul><p><img src="'+t+'" alt=""></p><ol><li>链外应用系统通过调用前置节点上相应的&quot;链上操作&quot;上链交易体构建接口，将上链操作相关参数构造成相应的上链交易体（Transaction / Tx Body），并返回给链外应用系统。</li><li>链外应用系统使用相应的业务系统身份标识对上链交易体进行身份签名。</li><li>链外应用系统通过提供上链交易体、代表当前链外应用系统的业务系统身份签名、要进行链上操作的业务域标识等信息给调用的前置节点的上链交易提交接口，向从法链发起上链交易请求。从法链确认接收上链交易请求后返回对应的交易唯一标识（Tx Hash），后续可通过Tx Hash获取从法链上相应交易的状态和信息。</li><li>前置节点判断链外应用系统伴随上链交易请求一起提交的业务系统身份标识是否有权访问指定的业务域。</li><li>前置节点判断合法合规后，使用当前前置节点身份对上链交易请求进行签名，并提交节点服务器进行处理。</li><li>节点服务器判断提交请求的前置节点是否有从法链访问许可授权。</li><li>节点服务器判断合法合规后，进行从法链全节点网络上链交易请求同步，并完成相应的上链交易操作。（换句话说，上链操作从被链实例确认接收，到成功落块，需要一个执行周期。执行周期的长短依赖于链实例中主节点网络的性能的好坏。）</li><li>链外应用系统用Tx Hash通过前置节点轮询相应上链交易处理状态。</li><li>成功：代表上链交易已成功上链保存，并没有抛异常（即上链交易成功落块确认，并长久固化在区块链节点网络中）。</li><li>失败：代表上链交易上链保存失败，有异常抛出。上链交易请求需重新提交。</li></ol><h2 id="链上数据查询" tabindex="-1">链上数据查询 <a class="header-anchor" href="#链上数据查询" aria-label="Permalink to &quot;链上数据查询&quot;">​</a></h2><ul><li><strong>调用步骤描述</strong></li></ul><p><img src="'+o+'" alt=""></p><ol><li>链外应用系统调用前置节点链上数据获取接口，并提交相应的链上数据获取请求参数、代表当前链外应用系统的业务系统身份签名、要获取的链上数据所在业务域标识等信息，向从法链发起链上数据获取请求。</li><li>前置节点判断链外应用系统伴随获取请求一起提交的业务系统身份标识是否有权访问指定的业务域。</li><li>前置节点判断合法合规后，使用当前前置节点身份对查询请求进行签名，并提交节点服务器进行查询。</li><li>节点服务器判断提交请求的前置节点是否有从法链访问许可授权。</li><li>节点服务器判断合法合规后，完成相应的链上数据查询，并返回对应查询结果给前置节点。</li><li>前置节点返回查询结果给链外应用系统。</li></ol>',9),n=[s];function d(c,_,h,p,m,u){return e(),l("div",null,n)}const T=i(r,[["render",d]]);export{x as __pageData,T as default};
