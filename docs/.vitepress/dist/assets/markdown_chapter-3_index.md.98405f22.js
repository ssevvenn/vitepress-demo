import{_ as t,o,c as l,U as a}from"./chunks/framework.e5d16f40.js";const e="/vitepress-demo/84731b9481f75cd69f5f64e57f2ee462.png",h=JSON.parse('{"title":"调用环境","description":"","frontmatter":{"prev":false,"next":false},"headers":[],"relativePath":"markdown/chapter-3/index.md","filePath":"markdown/chapter-3/index.md"}'),r={name:"markdown/chapter-3/index.md"},i=a('<h1 id="调用环境" tabindex="-1">调用环境 <a class="header-anchor" href="#调用环境" aria-label="Permalink to &quot;调用环境&quot;">​</a></h1><p><img src="'+e+'" alt=""></p><p>链外应用系统通过访问前置节点服务器提供的调用接口，与从法链节点网络中的任意节点进行数据交互；链外应用系统使用业务系统身份标识（已获得要访问业务域调用访问许可授权），通过接口调用在从法链特定业务域中进行链上操作，如上链保存结构数据、非结构化文件、调用业务合约等。</p><p>从法链提供完备的数据隐私保护，链上数据被加密、随机分散保存于节点网络中。对链上数据进行操作需要拥有相应的权限，从法链为了验证操作权限合法性，需要对发起链上操作请求的用户进行数字身份真实性验证，因此在提交链上操作请求时，需同时提交数字身份签名。</p><ul><li><strong>链外应用系统</strong></li></ul><p>链外应用系统是融入从法链提供的区块链服务的第三方业务系统。链外应用系统通过在自身代码中调用从法链提供的调用接口，从而实现向从法链提交数据或使用链上数据的能力。</p><ul><li><strong>数字身份管理工具</strong></li></ul><p>数字身份管理工具用于对从法链数字身份标识及对应的公私钥对的管理。工具提供数字身份生成；通过助记词恢复数字身份（包括身份身份标识、公私钥对）；通过二维码扫描完成数字签名等功能。</p><ul><li><strong>前置节点服务器</strong></li></ul><p>前置节点服务器是部署于链外应用系统网络环境中，负责在链外应用系统和从法链节点网络中的任意节点服务器间建立数据交换安全通道。链外应用系统只用通过前置节点和节点服务器之间的数据交互通道，方可进行链上操作。</p><p>前置节点服务器是负责完成链上操作相关数据预处理工作，将链上操作交互过程封装成简单易用的调用接口的前置服务器。</p><p>前置节点服务器使用从法提供的安装介质，由第三方自行安装并负责运维管理，并通过前置节点管理页面获得从法链对此前置节点的访问许可授权。</p><ul><li><strong>业务系统身份标识</strong></li></ul><p>业务系统身份标识是从法链上的数字身份唯一标识，即链上的账户地址。每个业务系统身份标识会有一组与之对应的、唯一的公私钥对，由从法链提供的数字身份管理工具生成。链外应用系统将生成的数字身份标识作为其&quot;业务系统身份标识&quot;，并获得从法链特定业务域的访问许可授权。</p><p>链外应用系统向从法链提交上链上操作时，需使用对应的私钥对上链交易体（Tx Body）进行签名，以便从法链业务域验证上链交易申请的合法性。</p><ul><li><strong>软件运行环境</strong></li><li>org.coolaw.crypto-1.0.0.jar</li></ul><p>为了降低开发人员学习成本和开发难度，缩短开发周期，从法链将链上操作调用所需的一些辅助功能封装于Java SDK中，通过在源代码中引用Jar包，可直接使用SDK中的方法。</p><ul><li>Java 8（Oracle JDK）</li></ul><p>用于支撑从法链Java SDK正常工作的Java类库和运行环境。</p><ul><li>ProtoBuf</li></ul><p>ProtoBuf（protocol buffers）是一种结构数据序列化方法。</p><ul><li>语言无关、平台无关：即 ProtoBuf 支持 Java、C++、Python 等多种语言，支持多个平台</li><li>高效：即比 XML 更小（3 ~ 10倍）、更快（20 ~ 100倍）、更为简单</li><li>扩展性、兼容性好：可以更新数据结构，而不影响和破坏原有的旧程序</li></ul>',22),p=[i];function n(s,c,u,_,d,f){return o(),l("div",null,p)}const g=t(r,[["render",n]]);export{h as __pageData,g as default};
